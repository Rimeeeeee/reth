# Runs ethereum/hive tests.

name: hive

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - try-spec-tests

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  prepare-reth:
    name: Build Reth Docker Image
    uses: ./.github/workflows/prepare-reth.yml
    with:
      image_tag: reth:local # ðŸ‘ˆ local tag
      binary_name: reth

  prepare-hive:
    name: Prepare Hive Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Checkout hive tests
        uses: actions/checkout@v5
        with:
          repository: ethereum/hive
          path: hivetests

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.13.1"

      - run: go version

      - name: Build hive assets
        run: .github/assets/hive/build_simulators.sh

      - name: Upload hive assets
        uses: actions/upload-artifact@v4
        with:
          name: hive_assets
          path: ./hive_assets

  test:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - sim: smoke/genesis
          - sim: smoke/network
          - sim: ethereum/sync
          - sim: devp2p
            limit: discv4
          - sim: devp2p
            limit: discv5
            include:
              - PingLargeRequestID
          - sim: ethereum/engine
            limit: engine-exchange-capabilities
          - sim: ethereum/engine
            limit: engine-withdrawals
          - sim: ethereum/engine
            limit: engine-auth
          - sim: ethereum/engine
            limit: engine-api
          - sim: ethereum/engine
            limit: cancun
          - sim: ethereum/rpc-compat
            include:
              - eth_blockNumber
          - sim: ethereum/eest/consume-engine
            limit: .tests/amsterdam.
          - sim: ethereum/eest/consume-rlp
            limit: .tests/amsterdam.
    needs:
      - prepare-reth
      - prepare-hive
    name: run ${{ matrix.scenario.sim }}${{ matrix.scenario.limit && format(' - {0}', matrix.scenario.limit) }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download hive assets
        uses: actions/download-artifact@v4
        with:
          name: hive_assets
          path: /tmp

      - name: Download reth image tarball
        uses: actions/download-artifact@v4
        with:
          name: reth-image
          path: /tmp

      - name: Load reth Docker image
        run: docker load -i /tmp/reth_image.tar

      - name: Move hive binary
        run: |
          mv /tmp/hive /usr/local/bin
          chmod +x /usr/local/bin/hive

      - name: Checkout hive tests
        uses: actions/checkout@v5
        with:
          repository: ethereum/hive
          ref: master
          path: hivetests

      - name: Run simulator
        run: |
          LIMIT="${{ matrix.scenario.limit }}"
          TESTS="${{ join(matrix.scenario.include, '|') }}"
          if [ -n "$LIMIT" ] && [ -n "$TESTS" ]; then
            FILTER="$LIMIT/$TESTS"
          elif [ -n "$LIMIT" ]; then
            FILTER="$LIMIT"
          elif [ -n "$TESTS" ]; then
            FILTER="/$TESTS"
          else
            FILTER="/"
          fi
          echo "filter: $FILTER"
          .github/assets/hive/run_simulator.sh "${{ matrix.scenario.sim }}" "$FILTER"

      - name: Parse hive output
        run: |
          find hivetests/workspace/logs -type f -name "*.json" ! -name "hive.json" | \
            xargs -I {} python .github/assets/hive/parse.py {} \
              --exclusion .github/assets/hive/expected_failures.yaml \
              --ignored .github/assets/hive/ignored_tests.yaml

      - name: Print simulator output
        if: ${{ failure() }}
        run: cat hivetests/workspace/logs/simulator.log

      - name: Print reth client logs
        if: ${{ failure() }}
        run: cat hivetests/workspace/logs/reth/client-*.log

  notify-on-error:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Slack Webhook Action
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Failed run: https://github.com/paradigmxyz/reth/actions/runs/${{ github.run_id }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}