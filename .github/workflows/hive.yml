# Runs `ethereum/hive` tests using local Reth build

name: hive

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-reth:
    name: Build local Reth
    runs-on: ubuntu-latest
    outputs:
      reth-binary: ${{ steps.reth-path.outputs.path }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Build Reth binary
        run: cargo build --release

      - name: Set Reth binary path
        id: reth-path
        run: echo "path=$(pwd)/target/release/reth" >> $GITHUB_OUTPUT

  prepare-hive:
    name: Prepare Hive
    if: github.repository == 'paradigmxyz/reth'
    needs: build-reth
    timeout-minutes: 45
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Checkout hive tests
        uses: actions/checkout@v5
        with:
          repository: ethereum/hive
          path: hivetests

      - uses: actions/setup-go@v5
        with:
          go-version: "^1.13.1"

      - name: Build hive assets
        run: .github/assets/hive/build_simulators.sh

      - name: Upload hive assets
        uses: actions/upload-artifact@v4
        with:
          name: hive_assets
          path: ./hive_assets

  test:
    name: Run Hive tests
    needs:
      - build-reth
      - prepare-hive
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - sim: smoke/genesis
          - sim: smoke/network
          - sim: ethereum/sync
          - sim: devp2p
            limit: discv4
          - sim: devp2p
            limit: discv5
            include:
              - PingLargeRequestID
          - sim: ethereum/engine
            limit: engine-exchange-capabilities
          - sim: ethereum/engine
            limit: engine-withdrawals
          - sim: ethereum/engine
            limit: engine-auth
          - sim: ethereum/engine
            limit: engine-api
          - sim: ethereum/engine
            limit: cancun
          - sim: ethereum/rpc-compat
            include:
              - eth_blockNumber
              - eth_call
              - eth_chainId
              - eth_createAccessList
              - eth_estimateGas
              - eth_feeHistory
              - eth_getBalance
              - eth_getBlockBy
              - eth_getBlockTransactionCountBy
              - eth_getCode
              - eth_getProof
              - eth_getStorage
              - eth_getTransactionBy
              - eth_getTransactionCount
              - eth_getTransactionReceipt
              - eth_sendRawTransaction
              - eth_syncing
              - debug_

    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download hive assets
        uses: actions/download-artifact@v5
        with:
          name: hive_assets
          path: /tmp

      - name: Move hive binary
        run: |
          mv /tmp/hive /usr/local/bin
          chmod +x /usr/local/bin/hive

      - name: Checkout hive tests
        uses: actions/checkout@v5
        with:
          repository: ethereum/hive
          ref: master
          path: hivetests

      - name: Run simulator with local Reth
        run: |
          RETH_BINARY="${{ needs.build-reth.outputs.reth-binary }}"
          LIMIT="${{ matrix.scenario.limit }}"
          TESTS="${{ join(matrix.scenario.include, '|') }}"
          if [ -n "$LIMIT" ] && [ -n "$TESTS" ]; then
            FILTER="$LIMIT/$TESTS"
          elif [ -n "$LIMIT" ]; then
            FILTER="$LIMIT"
          elif [ -n "$TESTS" ]; then
            FILTER="/$TESTS"
          else
            FILTER="/"
          fi
          echo "Using Reth binary: $RETH_BINARY"
          echo "filter: $FILTER"
          .github/assets/hive/run_simulator.sh "${{ matrix.scenario.sim }}" "$FILTER" "$RETH_BINARY"

      - name: Parse hive output
        run: |
          find hivetests/workspace/logs -type f -name "*.json" ! -name "hive.json" | xargs -I {} python .github/assets/hive/parse.py {} --exclusion .github/assets/hive/expected_failures.yaml --ignored .github/assets/hive/ignored_tests.yaml

      - name: Print simulator output
        if: ${{ failure() }}
        run: |
          cat hivetests/workspace/logs/*simulator*.log

      - name: Print Reth client logs
        if: ${{ failure() }}
        run: |
          cat hivetests/workspace/logs/reth/client-*.log

  notify-on-error:
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Slack Webhook Action
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Failed run: https://github.com/paradigmxyz/reth/actions/runs/${{ github.run_id }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
